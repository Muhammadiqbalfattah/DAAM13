# -*- coding: utf-8 -*-
"""DAAM13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18oEkxBTC-7as9WHEU8XHHLOGjufK-sAS
"""

def bfs(graph, start):
    visited = []
    queue = [start]
    
    while queue:
        node = queue.pop(0)
        if node not in visited:
            visited.append(node)
            neighbours = graph[node]
            for neighbours in neighbours:
                queue.append(neighbours)
    return visited

graph={'Amin' : {'Wasim', 'Nick', 'Mike'},
      'Wasim': {'Imran','Amin'},
      'Imran' : {'Wasim', 'Faras'},
      'Faras' : {'Imran'},
      'Mike' : {'Amin'},
      'Nick' : {'Amin'}}

bfs(graph,'Amin')

bfs(graph,'Wasim')

bfs(graph,'Imran')

bfs(graph,'Faras')

bfs(graph,'Mike')

bfs(graph,'Nick')

graph={'Rektor' : {'WarekSatu', 'WarekDua'},
      'WarekSatu': {'Rektor'},
      'WarekDua' : {'KaprodiDua', 'KaprodiSatu', 'KaprodiTiga'},
      'KaprodiSatu' : {'DosenA','DosenB','DosenC'},
      'KaprodiDua' : {'DosenD','DosenE'},
      'KaprodiTiga' : {'DosenF','DosenG'},
      'DosenA':{'KaprodiSatu'},
      'DosenB':{'KaprodiSatu'},
      'DosenC':{'KaprodiDua'},
      'DosenD':{'KaprodiDua'},
      'DosenE' :{'KaprodiDua'},
       'DosenF':{'KaprodiTiga'},
       'DosenG':{'KaprodiTiga'}
       }

bfs(graph,'Rektor')

bfs(graph,'WarekSatu')

bfs(graph,'WarekDua')

bfs(graph,'KaprodiSatu')

bfs(graph,'KaprodiDua')

bfs(graph,'KaprodiTiga')

bfs(graph,'DosenA')

bfs(graph,'DosenB')

bfs(graph,'DosenC')

bfs(graph,'DosenD')

bfs(graph,'DosenE')

bfs(graph,'DosenF')

bfs(graph,'DosenG')

def dfs(graph, start,visited=None):
  if visited is None:
      visited = set()
  visited.add(start)
  print(start)
  for next in graph[start] - visited:
    dfs(graph,  next, visited)
  return visited

graph={'Amin' : {'Wasim', 'Nick', 'Mike'},
      'Wasim': {'Imran','Amin'},
      'Imran' : {'Wasim', 'Faras'},
      'Faras' : {'Imran'},
      'Mike' : {'Amin'},
      'Nick' : {'Amin'}}

dfs(graph,'Amin')

dfs(graph,'Wasim')

dfs(graph,'Faras')

dfs(graph,'Nick')

graph={'Rektor' : {'WarekSatu', 'WarekDua'},
      'WarekSatu': {'Rektor'},
      'WarekDua' : {'KaprodiDua', 'KaprodiSatu', 'KaprodiTiga'},
      'KaprodiSatu' : {'DosenA','DosenB','DosenC'},
      'KaprodiDua' : {'DosenD','DosenE'},
      'KaprodiTiga' : {'DosenF','DosenG'},
      'DosenA':{'KaprodiSatu'},
      'DosenB':{'KaprodiSatu'},
      'DosenC':{'KaprodiDua'},
      'DosenD':{'KaprodiDua'},
      'DosenE' :{'KaprodiDua'},
       'DosenF':{'KaprodiTiga'},
       'DosenG':{'KaprodiTiga'}
       }

dfs(graph,'Rektor')

dfs(graph,'WarekSatu')

dfs(graph,'WarekDua')

dfs(graph,'KaprodiSatu')

dfs(graph,'KaprodiDua')

dfs(graph,'KaprodiTiga')

